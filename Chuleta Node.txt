node:

0) ejecutamos mongod, mongo y mongoDBcompass



1) npm init   (genera package.json y soportará paquetes npm desde ahora)



2) npm i express --save    (instalar express: framework backend para node.js, Router para nuestro servidor/renderizar un motor de vistas y aplicar middlewares)



3)npm i mongoose  (librería que te facilita la conexión con el mondongo)



4)npm i nodemon  (evita que tengas que pausar y reconectar el servidor para aplicar cambios)



5)crear index.js



6)añado en package.json el "dev": nodemon index.js



5)crear .gitignore   (node_modules)



6) Configurar servidor en index.js

const express = require("express");

const PORT = 3500;

const server = express();

const router = express.Router();

router.get("/", (req, res) => {
    res.send("Servidor funcionando")

server.use("/", router)

server.listen(PORT, () => {
    console.log(`Server is running in port http://localhost:${PORT}`);
});




7) npm run dev (arrancamos server)




8) generamos model (carpeta models y archivo individual)


const mongoose = require('mongoose');

const eventSchema = new.mongoose.Schema({
    image: { type: String, required: true },
    name: { type: String, required: true },
    band: { type: String, required: true },
    city: { type: String, required: true },
    date: { type: String, required: true },
    timing: { type: String, required: true },
    price: { type: Number, required: true }
},
    {
        timestamps: true,
    }
);

const Event = mongoose.model("Events", eventSchema);

module.exports = Event;



9)generamos seed (carpeta seeds y archivo individual)

const mongoose = require('mongoose');

const Event = require("../models/events-model");

const DB_URL = "mongodb://localhost:27017/EventosBarcelona";

const events = [
    {
        "image": "https://scontent-mad1-1.xx.fbcdn.net/v/t1.6435-9/171570743_4408953892454579_7695032451379790769_n.jpg?_nc_cat=108&ccb=1-3&_nc_sid=730e14&_nc_ohc=K1Q-ewRhvD0AX88CaF8&_nc_ht=scontent-mad1-1.xx&oh=b1f68e14ca9dfc428148783abb762408&oe=60CD67AA",
        "name": "BAD RELIGION 40 YEARS + 2",
        "genre": "Metal",
        "bands": ["Bad Religion", "Suicidal Tendencies", "Millencolin", "Desakato", "Blowfuse", "Bastards on Parade"],
        "date": "22 Mayo 2022",
        "timing": "Unknown",
        "price": ""
    },


const eventDocument = events.map(event => new Event(event));

mongoose.connect(DB_URL, {
    useNewUrlParser: true,
    useUnifiedTopology: true

})
    .then(async () => {
        console.log("Conectando a la base de datos desde el seed");

        const allEvents = await Event.find();

        if (allEvents.length) {
            await Event.collection.drop();
            console.log("Colección eliminada correctamente");
        }
    })
    .catch(error => {
        console.log("Error eliminando la colección deseada", error)
    })
    .then(async () => {
        await Event.insertMany(events);
        console.log("Evento añadido con éxito")
    })
    .catch(error => {
        console.log("Error añadiendo el seed", error)
    })
    .finally(() => mongoose.disconnect());


10) ejecutamos dentro carpeta de seeds node x-seed.js y aparece base de datos en compass (las semillas abren conexion,


11) generamos archivo db y linkamos a base de datos  (configurar conexion con la base de datos, se mantiene abierta para comunicarte con ella, que te devuelva o envies cosas)


const mongoose = require('mongoose');

const DB_URL = 'mongodb://localhost:27017/may-session-2';

const connect = () => {
    mongoose
        .connect(DB_URL, { useNewUrlParser: true, useUnifiedTopology: true })
        .then(res => {
            console.log('Conectado a la base de datos');
        })
        .catch(error => {
            console.log('Ha ocurrido un error conectando a la base de datos.', error);
        });
};

module.exports = {
    DB_URL,
    connect,
};


12) conectar con la base de datos importando archivo db en index.js

const db = require('./db');

db.connect();


13) instalar hbs -> npm i hbs



14) creamos carpeta routes y empezamos a hacer rutas (CRUD) POST GET PUT DELETE



15)importamos rutas en index.js



const eventsRouter = require("./routes/events-route");

...


server.use("/eventos", eventsRouter);




16)creamos carpeta views y hacemos html de eventos  (events.hbs)




17)importar en index :


const path = require('path');




const server = express();
const router = express.Router();

server.use(express.static(path.join(__dirname, 'public')));

server.set('views', path.join(__dirname, 'views'));

server.set('view engine', 'hbs');

server.use(express.json());

server.use(express.urlencoded({ extended: true }));


18)cambiar .json por .render  en route

     YA ESTAMOS PINTANDO EN HTML 



19)creamos carpeta public y dentro de ésta carpeta styles. Dentro de styles creamos archivo css, ej: styles.css



20)














